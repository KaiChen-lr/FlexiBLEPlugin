name: Linux CI Manual

on:
  push:
    branches:
      -"main"
  pull_request:
    branches:
      -"main"
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  unix:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux (OpenMM 8)
            os: ubuntu-latest
            cuda-version: "11.7.0"
            gcc-version: "11.3.*"
            nvcc-version: "11.7"
            python-version: "3.10"
            openmm-version: "8.*"
            swig-version: "4.0.1"
    steps:

      - name: "Check out"
        uses: actions/checkout@v3
      
      - name: "Install CUDA Toolkit on Linux"
        uses: Jimver/cuda-toolkit@v0.2.11
        id: cuda-toolkit
        with:
          cuda: ${{ matrix.cuda-version }}

      - name: "Install AMD OpenCL on Linux"
        run: source devtools/scripts/install_amd_opencl.sh

      - name: "Update the conda enviroment file"
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '@'
          tokenSuffix: '@'
          files: devtools/conda-envs/build-${{ matrix.os }}.yml
        env:
          CUDATOOLKIT_VERSION: ${{ matrix.cuda-version }}
          GCC_VERSION: ${{ matrix.gcc-version }}
          NVCC_VERSION: ${{ matrix.nvcc-version }}
          OPENMM_VERSION: ${{ matrix.openmm-version }}

      - uses: conda-incubator/setup-miniconda@v2
        name: "Install dependencies with conda"
        with:
          activate-environment: build
          environment-file: devtools/conda-envs/build-${{ matrix.os }}.yml
          python-version: ${{ matrix.python-version }}

      - name: "List conda packages"
        shell: bash -l {0}
        run: conda list

      - name: "Configure"
        shell: bash -l {0}
        run: |
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${CONDA_PREFIX} \
            -DOPENMM_DIR=${CONDA_PREFIX} \
            -DPLUGIN_BUILD_OPENCL_LIB=OFF \
            -DOPENCL_DIR=${CONDA_PREFIX} \
            -DPLUGIN_BUILD_CUDA_LIB=OFF \
            -DCUDA_TOOLKIT_ROOT_DIR=${CUDA_PATH} \
            -DCUDA_CUDA_LIBRARY=${CUDA_PATH}/lib64/stubs

      - name: "Build"
        shell: bash -l {0}
        run: |
          cd build
          make -j2 install
